[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/nfl-redzone/nflredzone.html",
    "href": "posts/nfl-redzone/nflredzone.html",
    "title": "NFL Redzone reverse engineering",
    "section": "",
    "text": "Code\n#libraries\nlibrary(tidyverse)\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nCode\n#install.packages(\"nflreadr\")\nlibrary(nflreadr)\nlibrary(ggalt)\n\n\nRegistered S3 methods overwritten by 'ggalt':\n  method                  from   \n  grid.draw.absoluteGrob  ggplot2\n  grobHeight.absoluteGrob ggplot2\n  grobWidth.absoluteGrob  ggplot2\n  grobX.absoluteGrob      ggplot2\n  grobY.absoluteGrob      ggplot2\n\n\n\n\nCode\n# loading data\n\nseason_data &lt;- load_pbp(seasons = (2022))\n\n\n\n\nCode\n#Filter for weeks 1-3\nmia_w3 &lt;- season_data %&gt;% \n  filter(week &lt;= 3, posteam == \"MIA\", yardline_100 &lt;= 20, play_type == \"run\" | play_type == \"pass\") %&gt;% \n    summarize(total_plays = n(), \n            whole_epa = sum(epa))\n\n #Confirmed epa for those 20 plays is 9.0.\n\n\n\n\nCode\n#Miami's epa went up to around 13 by the end of the season, up five points from week 3\n\nmiami &lt;- season_data %&gt;% \n  filter(posteam == \"MIA\", yardline_100 &lt;= 20, play_type == \"run\" | play_type == \"pass\") %&gt;% \n  summarize(total_plays = n(), \n            whole_epa = sum(epa))\n\n\n\n\nCode\n# All NFl through week 3 and then through week 8\n\nplays_w3 &lt;- season_data %&gt;% \n    filter(week &lt;= 3, yardline_100 &lt;= 20, play_type == \"run\" | play_type == \"pass\") %&gt;% \n  group_by(posteam) %&gt;% \n  summarize(w3_plays = n(), \n            w3_epa = sum(epa))\n\nplays_w8 &lt;- season_data %&gt;% \n    filter(week &lt;= 8, yardline_100 &lt;= 20, play_type == \"run\" | play_type == \"pass\") %&gt;% \n  group_by(posteam) %&gt;% \n  summarize(w8_plays = n(), \n            w8_epa = sum(epa))\n\n#joining\njoined_plays &lt;- inner_join(plays_w3, plays_w8, by = \"posteam\")\n\njoined_plays &lt;- joined_plays %&gt;% \n  mutate(diff = w8_epa - w3_epa) %&gt;% \n  arrange(desc(diff))\n\n\nI created a difference column to show how much a team has improved or regressed from weeks 3 to 8 of the season and arranged at first by differential. The Jets being as high as they are surprised me when I arranged by differential. It showed they improved a lot in the red zone even though they weren’t a good team overall.\nWhen I order by w8_epa, Kansas City being No. 1 makes sense. Mahomes is always finding ways to improve and find new ways to maneuver his offense through the red zone and find unique ways to get the ball into the end zone. Whether it’s a shovel pass, option, run or sneak, he makes the most of those opportunities.\nMinnesota is a team that made a massive improvement over the course of the season.\nDenver regressing doesn’t surprise me because last season, Russell Wilson faced a plethora of issues and was an eyesore of the Broncos offense.\n\n\nCode\n# dumbell chart\nggplot() + \n  geom_dumbbell(\n    data=joined_plays, \n    aes(y = reorder(posteam, w8_epa), x=w3_epa, xend=w8_epa),\n    size = 1,\n    color = \"grey\",\n    colour_x = \"green\",\n    colour_xend = \"blue\") + \n  theme_minimal()+\n  labs(x = \"Expected points added\",\n       y = \"Team\",\n       caption = \"Source: nflreadr | Chart by Dylan Manfre\",\n       title = \"Expected points added week 3 through week 8\",\n       subtitle = \"Blue is week 8, green is week 3\")\n\n\nWarning: Using the `size` aesthietic with geom_segment was deprecated in ggplot2 3.4.0.\nℹ Please use the `linewidth` aesthetic instead."
  },
  {
    "objectID": "posts/running-on-empty/index.html",
    "href": "posts/running-on-empty/index.html",
    "title": "Running on empty",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(ggplot2)\n\n\n\n\nCode\nlogs &lt;- read_csv(\"https://www.thescoop.org/sports-data-files/footballlogs23.csv\")\n\n\nRows: 1205 Columns: 54\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): HomeAway, Opponent, Result, TeamFull, TeamURL, Outcome, Team, Con...\ndbl  (45): Game, PassingCmp, PassingAtt, PassingPct, PassingYds, PassingTD, ...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\n#just big 10\nb10 &lt;- logs %&gt;% \n  filter(Conference == \"Big Ten Conference\")\n\n#Fascet Wrap\nggplot() + \n  geom_line(data=b10, aes(x=Date, y=RushingAvg, group=TeamFull)) +\n  facet_wrap(~TeamFull)\n\n\n\n\n\nCode\n#Conference average\nb10 %&gt;% \n  summarize(mean(RushingAvg))\n\n\n# A tibble: 1 × 1\n  `mean(RushingAvg)`\n               &lt;dbl&gt;\n1               3.82\n\n\nCode\nRushingAvgB10 &lt;- 3.816667\n\n\nMaryland has not finished a game averaging more than 4.5 rushing yards since the end of September. It had 5.2 in a dominating 44-17 win against Indiana and has spiraled down since.\nAnd in the Big Ten, no other team has dipped below the conference average as much as Maryland did after its loss to Penn State.\n\n\nCode\nggplot() + \n  geom_hline(yintercept=RushingAvgB10, color=\"blue\") + \n  geom_line(data=b10, aes(x=Date, y=RushingAvg, group=TeamFull)) +  facet_wrap(~TeamFull)+\n  labs(title = \"Did Maryland just tank?\",\n       subtitle = \"Maryland's average rushing yards took a massive hit after deflating loss to Penn State.\",\n       caption = \"Source: College Football Reference | Graph by Dylan Manfre\")\n\n\n\n\n\nMaryland finished with -3.2 rushing yards, extended its losing streak to four games and put its bowl game eligibility further out of reach.\nMany other teams in the Big Ten are rather consistent in their rushing averages and stayed close to the conference average. Illinois dipped below once, which makes its win over Maryland more of a blemish for the Terps."
  },
  {
    "objectID": "posts/Big-Ten-Plays/index.html",
    "href": "posts/Big-Ten-Plays/index.html",
    "title": "Big Ten Plays",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n\n\nCode\n footballlogs_22 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs22.csv\")\nfootballlogs_23 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs23.csv\")\n\n\n\n\nCode\n#filtering TeamFull for the big_ten opponents.\n big_ten_logs_22 &lt;- footballlogs_22 %&gt;% \n  filter(Conference == \"Big Ten Conference\")\n\n\n\n\nCode\n big_ten_logs_23 &lt;- footballlogs_23 %&gt;% \n  filter(Conference == \"Big Ten Conference\")\n\n\n\n\nCode\n# generateing average offensive plays for 2022\n\navg_offense_b10 &lt;- big_ten_logs_22 %&gt;% \ngroup_by(TeamFull) %&gt;% \nsummarize(avg_offplays_22 = mean(OffensivePlays)) %&gt;% \narrange(desc(avg_offplays_22))\n\n\n\n\nCode\n#2023 avg offensive plays \n\navg_offense_b10_23 &lt;- big_ten_logs_23 %&gt;% \ngroup_by(TeamFull) %&gt;% \nsummarize(avg_offplays_23 = mean(OffensivePlays)) %&gt;% \narrange(desc(avg_offplays_23))\n\n\n\n\nCode\n#joined dataframes\n\navg_offensive_plays_joined &lt;- inner_join(avg_offense_b10, avg_offense_b10_23, by = \"TeamFull\")\n\navg_offensive_plays_joined &lt;- avg_offensive_plays_joined %&gt;% \nmutate(difference = avg_offplays_23 - avg_offplays_22)\n\n\nPurdue and Penn State are interesting in this list. Why? Because Penn State is producing 10 more offensive plays on average in 2023 than a season ago. It finished in the middle of the conference then with around 70 offensive plays per game and now sits No. 1 in the conference.\nAs for Purdue, it may have gotten off the most offensive plays on average but the Boilermakers ranked in the bottom half of the conference in offensive efficiency last sesaon with a rating of 128.4. Rutgers had the lowest at 99.8\n\n\nCode\n#plotting this on a graph\n#I used ChatGPT to tell me where desc goes.\n\n#2022 graph\nggplot() + \n  geom_bar(\n    data=avg_offense_b10, \n    aes(x=reorder(TeamFull, -desc(avg_offplays_22)),\n        weight=avg_offplays_22)) +\n  labs(\n    title=\"Purdue isn't stuck in the middle with you\",\n    subtitle = \"Boilermaker offense valued quantity in 2022 offense\",\n    caption = \"Source: Sports Data Journalism Class\",\n    x=\"Team\", \n    y=\"Average number of offensive plays\") + \n  theme_minimal() + \n  coord_flip()\n\n\n\n\n\nThis sesaon, Penn State and Purdue are a bit closer in offensive efficiency and with Purdue ranking second in the average amount of offensive plays, it shows the Boilermakers know how to manage the ball.\nTheir two quarterbacks Drew Allen and Hudson Card, rank No. 4 and 5, respectively in the Big Ten in passing efficiency. Allen does have a slight edge over Card in passing percentage through five games in 2023.\n\n\nCode\n#2023 graph\nggplot() + \n  geom_bar(\n    data=avg_offense_b10_23, \n    aes(x=reorder(TeamFull, -desc(avg_offplays_23)),\n        weight=avg_offplays_23)) +\n  labs(\n    title=\"Penn State's offensive surging in 2023\",\n    subtitle = \"Nittany Lions were sixth in the Big Ten last season\",\n    caption = \"Source: Sports Data Journalism Class\",\n    x=\"Team\", \n    y=\"Average number of offensive plays\") + \n  theme_minimal() + \n  coord_flip()"
  },
  {
    "objectID": "posts/volleyball-aces/index.html",
    "href": "posts/volleyball-aces/index.html",
    "title": "Volleyball aces per match",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(ggbeeswarm)\nlibrary(ggrepel)\nset.seed(1234)\n\n\n\n\nCode\nplayers &lt;- read_csv(\"https://raw.githubusercontent.com/dwillis/NCAAWomensVolleyballData/main/data/ncaa_womens_volleyball_playerstats_2023.csv\")\n\n\n\n\nCode\n# limits\nplayers &lt;- players %&gt;% \n  filter(mp &gt; 20) %&gt;% \n  filter (!is.na(aces), !is.na(pos))\n\n\n\n\nCode\n#aces per match for players\n\nacespermatch &lt;- players %&gt;% \n  group_by(full_name) %&gt;% \n  mutate(acespermatch = (aces / mp)) %&gt;% \n  arrange(desc(acespermatch))\n\n#looking at summary\nsummary(acespermatch$acespermatch)\n#3Q is 0.9545\n\n\n\n\nCode\n#aces\n\ngood_aces &lt;- acespermatch |&gt; filter(acespermatch &gt; 0.9545)\n\n\n\n\nCode\nggplot() + geom_beeswarm(data=good_aces, aes(x=pos, y=acespermatch), color=\"grey\")\n\n\n\n\nCode\n#maryland players\n\numd &lt;- good_aces |&gt; \n  filter(team == \"Maryland Terrapins, Terps\") |&gt; \n  filter(acespermatch&gt;0.9545) |&gt; \n  arrange(desc(acespermatch))\n\n\nSam Csire leads Maryland in kills and her teammates aren’t too close to her. When it comes to aces per match she does have some friends. Csire is relatively close to fellow senior Lilly Gunter who averages nearly the same amount. Gunter has one more ace than Csire on the year and junior Erin Engel isn’t far behind with 22. Gunter’s five aces against Howard University were her most on the season.\nIn the broader NCAA, Maryland’s trio is relatively low on the list of players who play in at least 20 points per game.\n\n\nCode\nggplot() + \n  geom_beeswarm(\n    data=good_aces, \n    groupOnX=TRUE, \n    aes(x=pos, y=acespermatch), color=\"grey\") + \n  geom_beeswarm(\n    data=umd, \n    groupOnX=TRUE, \n    aes(x=pos, y=acespermatch), color=\"red\")+\n  geom_text_repel(\n    data=umd, \n    aes(x=pos, y=acespermatch, label=full_name))+\n  labs(\n     title=\"Some games are an A+, not all\", \n     subtitle=\"Three Maryland players average slightly over one ace per game\",\n     caption = \"Source: NCAA | Graphic by Dylan Manfre\")\n\n\nWarning: The `groupOnX` argument of `geom_beeswarm()` is deprecated as of ggbeeswarm\n0.7.1.\nℹ ggplot2 now handles this case automatically."
  },
  {
    "objectID": "posts/maryland-ypp/index.html",
    "href": "posts/maryland-ypp/index.html",
    "title": "Maryland YPP",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(cfbfastR)\nlibrary(ggrepel)\n\n\n\n\nCode\n# loading data\n\nlogs &lt;- read_csv(\"https://thescoop.org/sports-data-files/footballlogs1123.csv\")\n\n\n\n\nCode\n# Populating the NAs\n# if the month is January its years -1 otherwise its year. Code is from chat GPT\nlogs &lt;- logs %&gt;%\n mutate(\n    Season = ifelse(\n      is.na(Season),\n      ifelse(format(Date, \"%Y\") == \"2022\" & format(Date, \"%m\") == \"01\",\n             as.integer(format(Date, \"%Y\")) - 1,\n             as.integer(format(Date, \"%Y\"))\n      ),\n      Season\n    )\n  )\n\n\n\n\nCode\nwinlosslogs &lt;- logs |&gt; \n  mutate(\n    wins = case_when(\n      grepl(\"W\", Outcome) ~ 1, \n      grepl(\"L\", Outcome) ~ 0)\n)\n\n\nIs Maryland football getting good the last few seasons? Well, 2023 has at least shown progress in that area and 2022 it was right on the money. In short, if you’re in the bottom right quadrant, you’re golden. Meaning you’re getting a lot of yards and not allowing much from your opponent.\n2022 meant that Maryland was about average for the amount of yardage it gained on offense and it kept opposing teams at bay.\n\n\nCode\n#grouping by years\nyears_md &lt;-  winlosslogs %&gt;% \n  filter(Team == \"Maryland\") %&gt;% \n  group_by(Season) %&gt;% \nsummarise(\n    TotalPlays = sum(OffensivePlays), \n    TotalYards = sum(OffensiveYards), \n    DefensivePlays = sum(DefPlays), \n    DefensiveYards = sum(DefYards), \n    TotalWins = sum(wins)) %&gt;% \n  mutate(\n    OffensiveYPP = TotalYards/TotalPlays, \n    DefensiveYPP = DefensiveYards/DefensivePlays)\n\n\nFrom the data, we need to only show Maryland and its yards per play.\n\n\nCode\n#Graph\nggplot() + \n  geom_point(\n    data=years_md, \n    aes(x=OffensiveYPP, y=DefensiveYPP, size=TotalWins), \n    color=\"red\") + \n  geom_vline(xintercept = 5.700174) + \n  geom_hline(yintercept = 5.55143) + \n  geom_text_repel(\n    data=years_md, \n    aes(x=OffensiveYPP, y=DefensiveYPP, label=Season)\n  ) +\n  labs(title=\"Offense is going right for Maryland\", subtitle=\"Through seven games in 2023, Maryland is on the right track.\", caption=\"Source: NCAA | By Dylan Manfre\")  + theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\nThrough seven games in 2023, Maryland is averageing a little over six yards per play on offense and so far it’s netted the program five wins. Though, some may say it should be six after a loss to Illinois on homecoming.\nIn the era of Mike Locksley - since 2019 - Maryland has been a bit all over the place. That 2019 season, Maryland allowed quite a bit of yardage. It was the msot out of the available data. The Terps can push that forward if they continue playing to their strengths annd not giving up yards to their opponents."
  },
  {
    "objectID": "posts/kevin-willard-team/index.html",
    "href": "posts/kevin-willard-team/index.html",
    "title": "What makes a Kevin Willard team",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(scales)\n#install.packages(\"htmltools\")\nlibrary(htmltools)\n#install.packages(\"quarto\")\nlibrary(quarto)\n\n\n\n\nCode\nlogs &lt;- read_csv(\"https://thescoop.org/sports-data-files/cbblogs1524.csv\")\n\n\n\n\nCode\n# Willard era/cleaning\n\nwillard_era &lt;- logs %&gt;% \n  filter((TeamFull == \"Seton Hall Pirates\" & Season &gt;= \"2014-2015\" & Season &lt;= \"2021-2022\") | (TeamFull == \"Maryland Terrapins\" & Season &gt;= \"2022-2023\")) %&gt;% \n    mutate(\n    winloss = case_when(\n      grepl(\"W\", W_L) ~ 1,\n      grepl(\"L\", W_L) ~ 0))\n\n\n\n\nCode\n# Exploration of Seton Hall/UMD era\n\nstats &lt;- willard_era %&gt;% \n  group_by(Season, TeamFull) %&gt;%\n  summarize(total_wins = sum(winloss),\n            point_diff = sum(TeamScore) - sum(OpponentScore),\n            blocks = sum(TeamBlocks),\n            oReb = sum(TeamOffRebounds),\n            oReb_diff = sum(TeamOffRebounds) - sum(OpponentOffRebounds),\n            team_ator = sum(TeamAssists)/sum(TeamTurnovers),\n            opp_ator = sum(OpponentAssists)/sum(OpponentTurnovers),\n            ator_diff = team_ator - opp_ator)\n\n\nKevin Willard’s teams at Seton Hall were exceptionally good at offensive rebounding during his final year as the Pirates’ head coach. They ranked 30th in the country at the time and third in the Big East in 2021-2022. That was something his teams had been good at during his entire stretch at Seton Hall.\nIn all but one year, Seton Hall always ended the season with more than 300 offensive rebounds. His first season at Maryland, they finished with 305. During Willard’s third year at Seton Hall, his team grabbed 145 more rebounds than their opponents The next highest was 70 in 2017-2018.\nAnother stat Willard’s teams did well in was Blocks. They were 13th in the country in blocks per game in 21-22 and Ike Obiagu ranked fifth in the country in that stat too.\n\n\nCode\noreb_categories &lt;- willard_era %&gt;% \n  #filter(TeamFull == \"Maryland Terrapins\", Season == \"2022-2023\") %&gt;% \n  arrange(desc(TeamOffRebounds)) %&gt;% \n  select(Date, TeamFull, Opponent, winloss, TeamOffRebounds) %&gt;% \n  mutate(categories = case_when(\n        TeamOffRebounds &gt;= 10 ~ \"over 10 oReb\",\n        TeamOffRebounds &lt;= 10 ~ \"under 10 oReb\"))\n\ncount &lt;- oreb_categories %&gt;% \n  group_by(winloss, categories ) %&gt;% \n  summarize(count = n()) %&gt;% \n  pivot_wider(names_from = winloss, values_from = count) %&gt;% \n  rename(wins = '1',\n         loss = '0')\n\n\nI decided to see Willard’s record based on his team’s offense and rebounds and the results are staggering. His teams were 101-53 when his team’s have over 10 rebounds and 81-55 when they grab fewer. Still well over .500 in both but the records speak for themselves. Willard-led teams are better when their offensive rebounding numbers are higher.\n\n\nCode\nhtml_code &lt;- '&lt;iframe src=\"https://datawrapper.dwcdn.net/3bJy0/1/\" width=\"100%\" height=\"202\" scrolling=\"no\" frameborder=\"0\" allowtransparency=\"true\"&gt;&lt;/iframe&gt;'\n\nHTML(html_code)\n\n\n\n\n\nCode\n# I'm having trouble getting the graph to show up when I render my quarto doc. I tried multiple methods to get it to show up but none worked. \n\n# I tried HTML(html_code), then view() and print() and display_html()."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/alexander-logs/index.html",
    "href": "posts/alexander-logs/index.html",
    "title": "Does Brinae Alexander play better at home? She thinks so",
    "section": "",
    "text": "Brinae Alexander emphasized how much she enjoyed playing at the Xfinity Center after a dominant win over Niagara. The Maryland women’s basketball graduate student guard finished with 29 points and hit her first 11 field goals.\n“I do love playing at home and I always shoot better at home,” the graduate student guard said after the game on Nov. 29. “I was going in with high confidence knowing that I always shoot well at home … I really needed this.”\nShe enjoys defending home court and believes it adds a competitive edge.\nData shows the Xfinity Center likes her back. Not only are the fans cheering her on but the stats are making the experience that much better. Alexander performs better at home than on the road.\n\n\n\n\n\nAlexander helped the Terps get 28 wins en route to an appearance in the Elite Eight last season. This year, Alexander is averaging around 10.5 points per game regardless of location and is heping Maryland averaged around 81 points per game at home in 2023. That is around seven points per game higher than Vanderbilt’s home average during Alexander’s last season there in 2021.\nMaryland’s next game is on Wednesday, Dec. 20 against James Madison in College Park."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/third-and-six/index.html",
    "href": "posts/third-and-six/index.html",
    "title": "Third and Six",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(cfbfastR)\n\n\ndataframes # load the pbp data\n\n\nCode\nplays &lt;- load_cfb_pbp(seasons = c(2019, 2020, 2021, 2022, 2023))\nView(plays)\n\n\n\n\nCode\nbig10 &lt;- c(\"Nebraska\", \"Iowa\", \"Minnesota\", \"Illinois\", \"Northwestern\", \"Wisconsin\", \"Indiana\", \"Purdue\", \"Ohio State\", \"Michigan\", \"Michigan State\", \"Penn State\", \"Rutgers\", \"Maryland\")\n\n\n\n\nCode\n#filtering for third and six\n\n#shows all 3,6 plays regardless of team\nthird_six &lt;- plays %&gt;% \n  filter(down == 3, distance == 6)\n\nView(third_six)\n\n\n\n\nCode\n#All Teams section\n\n#Number of play types on third and six / Number of run plays on third and six\n\n#2359 rushing plays happened on third and six. (2459 if you include the 100 rushing touchdowns)\n\n\nteams_play_type &lt;- third_six %&gt;%\n  group_by(play_type) %&gt;% \n  summarize(count = n()) %&gt;% \n  arrange(desc(count))\n\n\n\n\nCode\n#Run play percentage on third and six\n#Teamss rushed the ball 20% of the time on third and six. Third most common among the play types.\n\nteams_play_perc &lt;- teams_play_type %&gt;% \n  mutate(play_perc = count/sum(count)*100)\n\n\n\n\nCode\n#Average yards gained on third and six runs\n#Teams rushed for an average of 5.6 yards on third and six.\n\nteams_avg_rushyds &lt;- third_six %&gt;% \n  filter(play_type == \"Rush\") %&gt;% \n  summarize(avg_rushyds = mean(yards_gained))\n\n\nNumber of third and six runs for available data 2022 had the most rushes on third and 6.\n\n\nCode\nyearly_rushes &lt;- third_six %&gt;% \n  filter(play_type == \"Rush\") %&gt;% \n  group_by(year) %&gt;% \n  summarize(count = n()) %&gt;% \n  arrange(desc(count))\n\n\nWhich team ran on third and six the most? Navy ran the most on third and six over the last four seasons with 49 times. Army was second with 42. Must be all that training.\n\n\nCode\nteams_rushed &lt;- third_six %&gt;% \n  filter(play_type == \"Rush\") %&gt;% \n  group_by(pos_team) %&gt;% \n  summarize(count = n()) %&gt;% \n  arrange(desc(count))\n\n\nMaryland Section\nCounting the number of play types on third and six. Number of Runs? Maryland rushed 15 times on third and six.\n\n\nCode\nmd_play_types &lt;- third_six %&gt;%\n  filter(pos_team == \"Maryland\") %&gt;% \n  group_by(play_type) %&gt;% \n  summarize(count = n()) %&gt;% \n  arrange(desc(count))\n\n\nRun percentage: Maryland ran the ball 27% of the time on third and six.\n\n\nCode\nplay_perc &lt;- md_play_types %&gt;% \n  mutate(play_perc = count/sum(count)*100)\n\n\n6.5 rushing yards per game on third and six for Maryland.\n\n\nCode\nmd_avg_rushyds &lt;- third_six %&gt;% \n  filter(play_type == \"Rush\" | play_type == \"Rushing Touchdown\", pos_team == \"Maryland\") %&gt;%\n  summarize(avg_rushyds = mean(yards_gained))\n\n\nYearly totals for Maryland rushing on third and six show Maryland rushed 6 times on third and six in 2022 and four times so far this year\n\n\nCode\nmd_yearly_rushes &lt;- third_six %&gt;% \n  filter(play_type == \"Rush\", pos_team == \"Maryland\") %&gt;% \n  group_by(year) %&gt;% \n  summarize(count = n()) %&gt;% \n  arrange(desc(count))\n\nthird_six %&gt;% \n  filter(play_type == \"Rush\", pos_team == \"Maryland\", season == \"2022\") %&gt;% \n  group_by(period) %&gt;% \n  summarize(count = n()) %&gt;% \n  arrange(desc(count))\n\n\n# A tibble: 3 × 2\n  period count\n   &lt;int&gt; &lt;int&gt;\n1      2     2\n2      3     2\n3      4     2\n\n\nIn third and six situations, Maryland seems to have done this mostly against Big Ten teams.\n\n\nCode\nteams_md_rush_against &lt;- third_six %&gt;% \n  filter(play_type == \"Rush\", pos_team == \"Maryland\") %&gt;% \n  group_by(def_pos_team) %&gt;% \n  summarize(count = n()) %&gt;% \n  arrange(desc(count))\n\n\nHas Maryland done this in the crunch time before?\n\n\nCode\n#Just MD\nthird_six %&gt;% \n  filter(play_type == \"Rush\", period == 4, clock.minutes &lt; 4, pos_team == \"Maryland\" )\n\n\n────────────────────────────────────────────────────────────── cfbfastR 1.9.0 ──\n\n\n# A tibble: 2 × 331\n   year  week id_play   game_id game_p…¹ half_…² drive…³ pos_t…⁴ def_p…⁵ pos_t…⁶\n  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;     &lt;int&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;     &lt;int&gt;\n1  2021     6 4.01e17 401282769      167      76       4 Maryla… Ohio S…      17\n2  2022     1 4.01e17 401442035      173      80       3 Maryla… NC Sta…      16\n# … with 321 more variables: def_pos_team_score &lt;int&gt;, half &lt;dbl&gt;,\n#   period &lt;int&gt;, clock.minutes &lt;int&gt;, clock.seconds &lt;int&gt;, play_type &lt;chr&gt;,\n#   play_text &lt;chr&gt;, down &lt;dbl&gt;, distance &lt;dbl&gt;, yards_to_goal &lt;dbl&gt;,\n#   yards_gained &lt;dbl&gt;, EPA &lt;dbl&gt;, ep_before &lt;dbl&gt;, ep_after &lt;dbl&gt;, wpa &lt;dbl&gt;,\n#   wp_before &lt;dbl&gt;, wp_after &lt;dbl&gt;, def_wp_before &lt;dbl&gt;, def_wp_after &lt;dbl&gt;,\n#   penalty_detail &lt;chr&gt;, yds_penalty &lt;dbl&gt;, penalty_1st_conv &lt;lgl&gt;,\n#   new_series &lt;dbl&gt;, firstD_by_kickoff &lt;dbl&gt;, firstD_by_poss &lt;dbl&gt;, …\n\n\nCode\n#Big Ten\nb10_rush_third_six &lt;- third_six %&gt;% \n  filter(play_type == \"Rush\", period == 4, clock.minutes &lt; 4, pos_team %in% big10 )\n\n\nBlog Post\nAfter Maryland’s rather unsuccessful run on third and six against Illinois, fans questioned whether it was the right call. At the time, maybe not, but over the last four years, Maryland has called a rushing play on third and six three times against Illinois.\nThat’s tied for the most against a single opponent with fellow Big Ten foe Ohio State. Maryland ran the ball six times on third and six last season and they all came outside of the first quarter.\nHowever, of the times Maryland found itself in this situation, two instances were in crunch time with under four minutes remaining in the game. The most recent was in 2022 against NC State, a game Maryland won 16-12. The play came with 42 seconds left on the clock.\nFor Maryland, these situations happen from time to time but to put this in context, third and six rushes happened a total of 24 times in the Big Ten from 2019 to this season in crunch time.\n\n\nCode\n#graph showing how much third and six rushes have happened per season.\n#line chart with y axis as years and x axis as number of times it's happened.\n#Can also highlight Maryland in this\n\nb10_rush_third_six &lt;- b10_rush_third_six %&gt;%\n  filter(!is.na(season))\n\nb10_years &lt;- b10_rush_third_six %&gt;% \n  group_by(season) %&gt;% \n  summarize(count = n()) %&gt;% \n  arrange(desc(count))\n\n\n\n\nCode\nggplot() + \n  geom_bar(\n    data=b10_years, \n    aes(x=reorder(season, -`count`),\n        weight=`count`)) + \n  labs(\n    title=\"Rushing on 3rd and 6 not too uncommon in the Big Ten\", \n    x=\"Year\", \n    y=\"Number of plays\") + \n  theme_minimal() + \n  coord_flip()"
  },
  {
    "objectID": "posts/dylans-world/index.html",
    "href": "posts/dylans-world/index.html",
    "title": "Dylan’s world of sports data",
    "section": "",
    "text": "This is my sports data journalism blog. I want to show the world that I can do data journalism at a high level. It’s really important to me and makes me feel quite smart because I never thought I could do this before."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "sports_data_blog",
    "section": "",
    "text": "Does Brinae Alexander play better at home? She thinks so\n\n\n\nWomen's college basketball\n\n\n\n\n\n\n\n`Dec 31, 2023`{=html}\nDylan Manfre\n\n\n\n\n  \n\n\n\n\nWhat makes a Kevin Willard team\n\n\n\n\n\n\n\n\n\n\n\n\nNov 14, 2023\n\n\nDylan Manfre\n\n\n\n\n\n\n  \n\n\n\n\nRunning on empty\n\n\n\n\n\n\n\n\n\n\n\n\nNov 7, 2023\n\n\nDylan Manfre\n\n\n\n\n\n\n  \n\n\n\n\nNFL Redzone reverse engineering\n\n\n\n\n\n\n\n\n\n\n\n\nOct 31, 2023\n\n\nDylan Manfre\n\n\n\n\n\n\n  \n\n\n\n\nMaryland YPP\n\n\n\n\n\n\n\n\n\n\n\n\nOct 17, 2023\n\n\nDylan Manfre\n\n\n\n\n\n\n  \n\n\n\n\nVolleyball aces per match\n\n\n\n\n\n\n\n\n\n\n\n\nOct 17, 2023\n\n\nDylan Manfre\n\n\n\n\n\n\n  \n\n\n\n\nThird and Six\n\n\n\n\n\n\n\n\n\n\n\n\nOct 17, 2023\n\n\nDylan Manfre\n\n\n\n\n\n\n  \n\n\n\n\nBig Ten Plays\n\n\n\n\n\n\n\n\n\n\n\n\nOct 10, 2023\n\n\nDylan Manfre\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nDylan’s world of sports data\n\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2023\n\n\nDylan Manfre\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nOct 2, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  }
]